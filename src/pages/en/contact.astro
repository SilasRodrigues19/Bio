---
import Layout from "@/layouts/Layout.astro";

import { getLangFromUrl, useTranslations } from "@/i18n/utils";
import sgMail from '@sendgrid/mail';
sgMail.setApiKey(import.meta.env.SG_API);

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);

const errors = { name: '', email: '', message: '' };

if (Astro.request.method === "POST") {

  try {

    const data = await Astro.request.formData();
    const name = data.get("name");
    const email = data.get("email");
    const message = data.get("message").toString();

    if (typeof name !== "string" || name.length < 2) errors.name += "Enter a valid name";

    if (typeof email !== "string" || !email.includes("@")) errors.email += "Enter a valid email";

    if (typeof message !== "string" || message.length < 10) errors.message += "The message must be at least 10 characters long";

    const hasErrors = Object.values(errors).some(error => error);


    if (!hasErrors) {

      const msg = {
        to: 'silasrodrigues.fatec@gmail.com',
        from: 'silasrodrigues.fatec@gmail.com',
        replyTo: { email: email.toString(), name: name.toString() },
        subject: `New message from ${name}`,
        text: message,
      }
  
      await sgMail.send(msg).then(() => {
        Astro.response.status = 200;
        console.log("Email sent");
      }).catch((error) => {
        console.error(error);
      });

      return Astro.redirect(`/${lang}/contact/`);

    }


  } catch (error) {
    if (error instanceof Error) console.error(error.message);
  }

}

---

<Layout
  title={t("contact.layout.title")}
  description={t("contact.layout.description")}
>
  <section class="min-h-screen py-16 sm:py-20">
    <div
      class="mx-auto mt-12 max-w-2xl px-4 text-left sm:px-6 lg:max-w-7xl lg:px-8"
    >
      <div class="my-4 flex flex-col gap-4 sm:gap-6">
        <h1
          class="text-4xl font-medium tracking-tight text-primary-950/70 dark:text-primary-200/70 sm:text-3xl lg:text-5xl"
        >
          Get in touch
        </h1>
        <p
          class="max-w-xl text-lg text-primary-950/70 dark:text-primary-200/70 sm:text-xl"
        >
          Hate forms? Send us an <a
            href="mailto:silasrodrigues.fatec@gmail.com"
            class="underline underline-offset-4">email</a
          > instead.
        </p>
        <div
          class="grid max-w-screen-xl grid-cols-1 gap-8 rounded-lg border-2 px-8 py-16 dark:border-gray-800 dark:text-gray-100 md:grid-cols-2 md:px-12 lg:px-16 xl:px-32"
        >
          <div class="flex flex-col justify-center gap-2">
            <div class="space-y-2">
              <h2
                class="text-4xl font-bold text-primary-950/70 dark:text-primary-200/70 lg:text-5xl"
              >
                Let's talk!
              </h2>
              <div class="text-primary-950/70 dark:text-primary-200/70">
                Send your message and it will be responded to as quickly as
                possible.
              </div>
            </div>
            <img
              src="/assets/contact.svg"
              class="h-52 p-6 md:h-64"
              alt="Contact form illustration"
              loading="lazy"
              decoding="async"
            />
          </div>
          <form class="space-y-6 text-primary-950/70 dark:text-primary-200/70" method="POST">
            <div>
              <label for="name" class="text-sm">Name</label>
              {errors.name && <p class="text-red-500 text-sm">{errors.name}</p>}
              <input
                id="name"
                name="name"
                type="text"
                class="w-full rounded bg-primary-200 p-3 outline-none focus:ring-2 focus:ring-primary-400 dark:bg-primary-800"
              />
            </div>
            <div>
              <label for="email" class="text-sm">Email</label>
              {errors.email && <p class="text-red-500 text-sm">{errors.email}</p>}
              <input
                id="email"
                name="email"
                type="email"
                class="w-full rounded bg-primary-200 p-3 outline-none focus:ring-2 focus:ring-primary-400 dark:bg-primary-800"
              />
            </div>
            <div>
              <label for="message" class="text-sm">Message</label>
              <div x-data="{ textareaHeight: '12rem' }">
                {errors.message && <p class="text-red-500 text-sm">{errors.message}</p>}
                <textarea
                  x-on:input="textareaHeight = $event.target.scrollHeight + 'px'"
                  x-on:blur="textareaHeight = '12rem'"
                  x-bind:style="'height: ' + textareaHeight"
                  x-on:focus="textareaHeight = $event.target.scrollHeight + 'px'"
                  id="message"
                  name="message"
                  rows="3"
                  class="w-full resize-none rounded bg-primary-200 p-3 outline-none focus:ring-2 focus:ring-primary-400 dark:bg-primary-800"
                ></textarea>
              </div>
            </div>
            <button
              class="flex w-full items-center justify-center gap-4 rounded bg-gradient-to-l from-violet-500/25 to-cyan-300/25 bg-size-200 bg-pos-0 p-3 text-sm font-bold uppercase tracking-wide text-primary-500 transition-all duration-500 hover:bg-gradient-to-r hover:bg-pos-100 dark:text-primary-400"
            >
              Send message
              <span class="iconify" data-icon="ph:paper-plane-tilt-fill"></span>
            </button>
          </form>
        </div>
      </div>
    </div>
  </section>
</Layout>
