---
import { getLangFromUrl, useTranslations } from "@/i18n/utils";

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);

interface Props {
  currentPath?: string;
}

const url = Astro.url.pathname;
const segments = url.split("/").filter(Boolean);
const lastDynamicSegment = segments.pop();

const { currentPath = lastDynamicSegment! } = Astro.props;

const translations = {
  social: t("breadcrumb.social"),
  about: t("breadcrumb.about"),
  contact: t("breadcrumb.contact"),
  privacy: t("breadcrumb.privacy"),
  resume: t("breadcrumb.resume"),
  en: t("breadcrumb.en"),
  pt: t("breadcrumb.pt"),
};

const translatedPath =
  translations[currentPath as keyof typeof translations] || currentPath;
---

<section class="w-full pt-36">
  <nav
    aria-label="breadcrumb"
    id="breadcrumb"
    class="mx-auto flex max-w-2xl items-center justify-end px-4 py-4 sm:px-6 sm:py-6 lg:max-w-7xl lg:px-8"
  >
    <ol class="inline-flex items-center space-x-4 py-2 text-sm font-medium">
      {
        lastDynamicSegment !== "" && (
          <li class="inline-flex items-center">
            <a
              href={`/${lang}`}
              class="rounded-sm text-primary-500 hover:text-primary-600
             focus-visible:outline focus-visible:outline-offset-8 focus-visible:outline-primary-600 focus-visible:dark:outline-primary-500"
            >
              {t("breadcrumb.home")}
            </a>
          </li>
        )
      }
      <li class="inline-flex items-center space-x-4">
        {
          lastDynamicSegment !== "" && (
            <svg
              class="h-6 w-6 text-primary-400"
              fill="currentColor"
              viewBox="0 0 20 20"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                fill-rule="evenodd"
                d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z"
                clip-rule="evenodd"
              />
            </svg>
          )
        }
        <span
          class="select-none capitalize text-primary-950/70 dark:text-primary-200/70"
        >
          {
            [
              "social",
              "about",
              "contact",
              "resume",
              "privacy",
              "en",
              "pt",
            ].includes(currentPath)
              ? translatedPath
              : "404"
          }
          <span class="sr-only">
            {t("sr-only-page")}
          </span>
        </span>
      </li>
    </ol>
  </nav>
</section>
