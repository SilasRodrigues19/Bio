---

import { getLangFromUrl, useTranslations } from '@/i18n/utils';

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);

interface Props {
  currentPath?: string;
}

const url = Astro.url.pathname;
const segments = url.split('/').filter(Boolean);
const lastDynamicSegment = segments.pop();

const { currentPath = lastDynamicSegment! } = Astro.props;

const translations = {
  'en': 'English',
  'pt': 'Portuguese'
};

const translatedPath = translations[currentPath as keyof typeof translations] || currentPath;

---

<section class="relative pt-36">
  <nav aria-label='breadcrumb' class="absolute xs:right-6 sm:right-40" id="breadcrumb">
    <ol class='inline-flex items-center space-x-4 py-2 text-sm font-medium'>
      {lastDynamicSegment !== '' && (
        <li class='inline-flex items-center'>
          <a href={`/${lang}`} 
             class='text-primary-500 hover:text-primary-600 rounded-sm
             ocus-visible:outline focus-visible:outline-offset-8 focus-visible:dark:outline-primary-500 focus-visible:outline-primary-600'
          >
            Home
          </a>
        </li>
      )}
      <li class='inline-flex items-center space-x-4'>
        {lastDynamicSegment !== '' && (
          <svg class="h-6 w-6 text-primary-400" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg">
            <path fill-rule="evenodd" d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z" clip-rule="evenodd"></path>
          </svg>
        )}
        <span class='text-primary-700 dark:text-primary-300 capitalize select-none'>
          {
            ['social', 'about', 'contact', 'en', 'pt'].includes(currentPath) ? 
            translatedPath  : '404'
          }
          <span class="sr-only">Current page</span>
        </span>
      </li>
    </ol>
  </nav>
</section>
