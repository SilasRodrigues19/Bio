---
import Breadcrumb from "@/components/layout/Breadcrumb.astro";
import Header from "@/components/layout/Header.astro";
import Footer from "@/components/layout/Footer.astro";
import "../styles/style.css";

import { getLangFromUrl, useTranslations } from "@/i18n/utils";

interface Props {
  title: string;
  description: string;
}

const { title, description } = Astro.props;

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);
---

<!doctype html>
<html lang={lang} x-cloak x-data :class="{ 'dark': $store.theme.isDark }">
  <head>
    <!-- Preconnect -->
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />

    <meta charset="UTF-8" />
    <meta
      name="viewport"
      content="width=device-width, initial-scale=1.0, viewport-fit=cover"
    />
    <meta name="author" content="Silas Rodrigues" />
    <meta
      name="keywords"
      content="Silas Rodrigues, freelancer, programador, desenvolvedor, portfolio, frontend, autodidata"
    />
    <meta name="description" content={description} />
    <meta name="language" content="pt" />
    <meta name="generator" content={Astro.generator} />
    <meta name="robots" content="index, follow" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <link rel="sitemap" href="/sitemap-index.xml" />

    <link
      rel="alternate"
      hreflang="pt"
      href="https://bio-silas.vercel.app/pt"
    />
    <link
      rel="alternate"
      hreflang="en"
      href="https://bio-silas.vercel.app/en"
    />

    <link
      rel="preload"
      href="https://fonts.googleapis.com/css2?family=Saira:wght@300;400;500;600;700&display=swap"
      as="style"
      onload="
		this.onload = null; this.rel = 'stylesheet'"
    />
    <link
      href="https://fonts.googleapis.com/css2?family=Saira:wght@300;400;500;600;700&display=swap"
      rel="stylesheet"
    />

    <title>{title}</title>

    <!-- Twitter Meta Tags -->
    <meta name="twitter:card" content="summary_large_image" />
    <meta name="twitter:title" content={title} />
    <meta name="twitter:description" content={description} />
    <meta name="twitter:image" content="/public/screenshots/preview.png" />

    <!-- LinkedIn Meta Tags -->
    <meta property="og:type" content="website" />
    <meta property="og:title" content={title} />
    <meta property="og:description" content={description} />
    <meta property="og:url" content="https://bio-silas.vercel.app/" />
    <meta property="og:image" content="/public/screenshots/preview.png" />
  </head>
  <body
    class="relative bg-primary-50 font-sans text-primary-950 antialiased transition selection:bg-primary-700 selection:text-primary-200
	dark:bg-primary-950 dark:text-primary-200 dark:selection:bg-primary-300 dark:selection:text-primary-700"
  >
    <Header />
    <Breadcrumb />
    <main class="swup transition-main">
      <slot />
    </main>
    <div class="overlay transition-overlay"></div>

    <div
      class="fixed bottom-16 xs:right-8 sm:right-36"
      x-data="{scrollBackTop: false}"
      x-cloak
    >
      <a
        x-on:scroll.window="scrollBackTop = (window.pageYOffset > window.outerHeight * 0.2) ? true : false"
        x-on:click="window.scrollTo({top: 0, behavior: 'smooth'})"
      >
        <span class="sr-only">
          {t("layout.scroll")}
        </span>

        <span
          class="iconify z-10 cursor-pointer transition-all hover:translate-y-4 hover:animate-bounce"
          :class="{ 'opacity-100 translate-y-26': scrollBackTop, 'opacity-0 translate-y-16': !scrollBackTop }"
          data-icon="jam:chevrons-up"
          data-width="30"
          data-height="30"
        >
        </span>
      </a>
    </div>

    <Footer />

    <style is:global>
      [x-cloak],
      [x-hidden] {
        display: none;
      }
    </style>

    <script async src="https://code.iconify.design/3/3.1.0/iconify.min.js"
    ></script>

    <script>
      import Alpine from "alpinejs";
      import collapse from "@alpinejs/collapse";

      Alpine.plugin(collapse);

      Alpine.store("theme", {
        init() {
          this.isDark =
            typeof localStorage !== "undefined" && localStorage.getItem("theme")
              ? localStorage.getItem("theme") === "dark"
              : window.matchMedia("(prefers-color-scheme: dark)").matches;
        },

        isDark: false,

        toggle() {
          this.isDark = !this.isDark;
          localStorage.setItem("theme", this.isDark ? "dark" : "light");
        },
      });

      window.Alpine = Alpine;
      Alpine.start();
    </script>
  </body>
</html>
